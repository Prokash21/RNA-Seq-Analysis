library(DESeq2)
library(pheatmap)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
#set the working directory
setwd("D:/DEG/GSE219036_6_june/keratinocyte")
count_data <- read.csv("count_keratinocyte.csv", header=TRUE,row.names = 1)
colnames(count_data)
head(count_data)
sample_info <- read.csv("meta_keratinocyte.csv",header = TRUE,row.names = 1)
colnames(sample_info)
head(sample_info)
sample_info$Treatment <- factor(sample_info$Treatment)
sample_info$Cell_type <- factor(sample_info$Cell_type)
# Convert non-integer values to integers in count data
count_data <- round(count_data)
head(count_data)
# Create a new count data object
new_count_data <- as.matrix(count_data)
head(new_count_data)
unique(sample_info$Treatment)
unique(sample_info$Cell_type)
# Generate the DESeqDataSet object
dds <- DESeqDataSetFromMatrix(countData = new_count_data, colData = sample_info, design = ~ Treatment)
# Perform DESeq2 analysis
dds <- DESeq(dds)
#set the referene for the treatment factor
dds$Treatment <- factor(dds$Treatment, levels = c ("mock","MPXV clade I infected", "MPXV clade IIb infected", "MPXV clade IIa infected"))
#filter the genes
keep <- rowSums(counts(dds)) >= 5
dds <- dds[keep,]
dds
#set the factor level
dds$Treatment <- relevel(dds$Treatment , ref = "mock")
dds$Treatment
#perform the statistical tests to identify differentialy expressed genes
dds <- DESeq(dds)
#dds <- as.data.frame(dds)
deseq_results <- results(dds)
deseq_results
summary(deseq_results)
deseq_results0.01 <- results(dds, alpha = 0.01)
summary(deseq_results0.01)
deseq_results <- as.data.frame(deseq_results)
class(deseq_results)
head(deseq_results)
deseq_results_ordered <- deseq_results[order(deseq_results$pvalue),]
head(deseq_results_ordered)
#is gene differentially expressed?
deseq_results["ENSG00000000971",]
#Step 1: filter based on p adjusted value
filtered <- deseq_results %>% filter(deseq_results$padj < 0.05)
#set the working directory
setwd("D:/DEG/GSE219036_6_june/keratinocyte")
count_data <- read.csv("count_keratinocyte.csv", header=TRUE,row.names = 1)
colnames(count_data)
head(count_data)
sample_info <- read.csv("meta_keratinocyte.csv",header = TRUE,row.names = 1)
colnames(sample_info)
head(sample_info)
sample_info$Treatment <- factor(sample_info$Treatment)
sample_info$Cell_type <- factor(sample_info$Cell_type)
# Convert non-integer values to integers in count data
count_data <- round(count_data)
head(count_data)
# Create a new count data object
new_count_data <- as.matrix(count_data)
head(new_count_data)
unique(sample_info$Treatment)
unique(sample_info$Cell_type)
# Generate the DESeqDataSet object
dds <- DESeqDataSetFromMatrix(countData = new_count_data, colData = sample_info, design = ~ Treatment)
# Perform DESeq2 analysis
dds <- DESeq(dds)
#set the referene for the treatment factor
dds$Treatment <- factor(dds$Treatment, levels = c ("mock","MPXV clade I infected", "MPXV clade IIb infected", "MPXV clade IIa infected"))
#filter the genes
keep <- rowSums(counts(dds)) >= 5
dds <- dds[keep,]
dds
#set the factor level
dds$Treatment <- relevel(dds$Treatment , ref = "mock")
dds$Treatment
#perform the statistical tests to identify differentialy expressed genes
dds <- DESeq(dds)
#dds <- as.data.frame(dds)
deseq_results <- results(dds)
deseq_results
summary(deseq_results)
deseq_results0.01 <- results(dds, alpha = 0.01)
summary(deseq_results0.01)
deseq_results <- as.data.frame(deseq_results)
class(deseq_results)
head(deseq_results)
deseq_results_ordered <- deseq_results[order(deseq_results$pvalue),]
head(deseq_results_ordered)
